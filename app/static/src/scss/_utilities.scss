// ============================================================================
// _UTILITIES.SCSS - DASHBOARD PROJECT
// Desarrollado por: jusga
// Descripción: Sistema completo de utilidades CSS para dashboard administrativo
// Versión: 2.0.0
// ============================================================================

// ============================================================================
// 1. SPACING UTILITIES (MARGIN & PADDING)
// ============================================================================

/// Generador de utilidades de espaciado
/// Genera clases para margin y padding en todas las direcciones
@each $prop, $abbrev in (margin: m, padding: p) {
  @each $size, $length in $spacers {
    // Todas las direcciones
    .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
    
    // Eje vertical (top + bottom)
    .#{$abbrev}y-#{$size} {
      #{$prop}-top: $length !important;
      #{$prop}-bottom: $length !important;
    }
    
    // Eje horizontal (left + right)
    .#{$abbrev}x-#{$size} {
      #{$prop}-left: $length !important;
      #{$prop}-right: $length !important;
    }
    
    // Direcciones individuales
    .#{$abbrev}t-#{$size} { #{$prop}-top: $length !important; }
    .#{$abbrev}e-#{$size} { #{$prop}-right: $length !important; }
    .#{$abbrev}b-#{$size} { #{$prop}-bottom: $length !important; }
    .#{$abbrev}s-#{$size} { #{$prop}-left: $length !important; }
  }
}

/// Margin auto utilities
.m-auto { margin: auto !important; }
.mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}
.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}
.mt-auto { margin-top: auto !important; }
.me-auto { margin-right: auto !important; }
.mb-auto { margin-bottom: auto !important; }
.ms-auto { margin-left: auto !important; }

/// Negative margins
@if $enable-negative-margins {
  @each $size, $length in $spacers {
    @if $size != 0 {
      .m-n#{$size} { margin: -$length !important; }
      .mx-n#{$size} {
        margin-right: -$length !important;
        margin-left: -$length !important;
      }
      .my-n#{$size} {
        margin-top: -$length !important;
        margin-bottom: -$length !important;
      }
      .mt-n#{$size} { margin-top: -$length !important; }
      .me-n#{$size} { margin-right: -$length !important; }
      .mb-n#{$size} { margin-bottom: -$length !important; }
      .ms-n#{$size} { margin-left: -$length !important; }
    }
  }
}

// ============================================================================
// 2. DISPLAY UTILITIES
// ============================================================================

/// Display utilities
.d-none { display: none !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-block { display: block !important; }
.d-grid { display: grid !important; }
.d-table { display: table !important; }
.d-table-row { display: table-row !important; }
.d-table-cell { display: table-cell !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }

/// Responsive display utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-to($breakpoint) {
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');
    
    .d#{$infix}-none { display: none !important; }
    .d#{$infix}-inline { display: inline !important; }
    .d#{$infix}-inline-block { display: inline-block !important; }
    .d#{$infix}-block { display: block !important; }
    .d#{$infix}-grid { display: grid !important; }
    .d#{$infix}-table { display: table !important; }
    .d#{$infix}-table-row { display: table-row !important; }
    .d#{$infix}-table-cell { display: table-cell !important; }
    .d#{$infix}-flex { display: flex !important; }
    .d#{$infix}-inline-flex { display: inline-flex !important; }
  }
}

// ============================================================================
// 3. FLEXBOX UTILITIES
// ============================================================================

/// Flex direction
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-column-reverse { flex-direction: column-reverse !important; }

/// Flex wrap
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

/// Justify content
.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-around { justify-content: space-around !important; }
.justify-content-evenly { justify-content: space-evenly !important; }

/// Align items
.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

/// Align content
.align-content-start { align-content: flex-start !important; }
.align-content-end { align-content: flex-end !important; }
.align-content-center { align-content: center !important; }
.align-content-between { align-content: space-between !important; }
.align-content-around { align-content: space-around !important; }
.align-content-stretch { align-content: stretch !important; }

/// Align self
.align-self-auto { align-self: auto !important; }
.align-self-start { align-self: flex-start !important; }
.align-self-end { align-self: flex-end !important; }
.align-self-center { align-self: center !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-stretch { align-self: stretch !important; }

/// Flex grow and shrink
.flex-fill { flex: 1 1 auto !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }

/// Order
@for $i from 0 through 12 {
  .order-#{$i} { order: $i !important; }
}
.order-first { order: -1 !important; }
.order-last { order: 13 !important; }

/// Responsive flexbox utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-to($breakpoint) {
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');
    
    .flex#{$infix}-row { flex-direction: row !important; }
    .flex#{$infix}-column { flex-direction: column !important; }
    .flex#{$infix}-row-reverse { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }
    
    .flex#{$infix}-wrap { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    
    .justify-content#{$infix}-start { justify-content: flex-start !important; }
    .justify-content#{$infix}-end { justify-content: flex-end !important; }
    .justify-content#{$infix}-center { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around { justify-content: space-around !important; }
    .justify-content#{$infix}-evenly { justify-content: space-evenly !important; }
    
    .align-items#{$infix}-start { align-items: flex-start !important; }
    .align-items#{$infix}-end { align-items: flex-end !important; }
    .align-items#{$infix}-center { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch { align-items: stretch !important; }
    
    @for $i from 0 through 12 {
      .order#{$infix}-#{$i} { order: $i !important; }
    }
    .order#{$infix}-first { order: -1 !important; }
    .order#{$infix}-last { order: 13 !important; }
  }
}

// ============================================================================
// 4. CSS GRID UTILITIES
// ============================================================================

/// Grid template columns
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)) !important; }
.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)) !important; }
.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)) !important; }
.grid-cols-none { grid-template-columns: none !important; }

/// Grid column span
.col-auto { grid-column: auto !important; }
.col-span-1 { grid-column: span 1 / span 1 !important; }
.col-span-2 { grid-column: span 2 / span 2 !important; }
.col-span-3 { grid-column: span 3 / span 3 !important; }
.col-span-4 { grid-column: span 4 / span 4 !important; }
.col-span-5 { grid-column: span 5 / span 5 !important; }
.col-span-6 { grid-column: span 6 / span 6 !important; }
.col-span-full { grid-column: 1 / -1 !important; }

/// Grid column start
.col-start-1 { grid-column-start: 1 !important; }
.col-start-2 { grid-column-start: 2 !important; }
.col-start-3 { grid-column-start: 3 !important; }
.col-start-4 { grid-column-start: 4 !important; }
.col-start-5 { grid-column-start: 5 !important; }
.col-start-6 { grid-column-start: 6 !important; }
.col-start-auto { grid-column-start: auto !important; }

/// Grid column end
.col-end-1 { grid-column-end: 1 !important; }
.col-end-2 { grid-column-end: 2 !important; }
.col-end-3 { grid-column-end: 3 !important; }
.col-end-4 { grid-column-end: 4 !important; }
.col-end-5 { grid-column-end: 5 !important; }
.col-end-6 { grid-column-end: 6 !important; }
.col-end-auto { grid-column-end: auto !important; }

/// Grid rows
.grid-rows-1 { grid-template-rows: repeat(1, minmax(0, 1fr)) !important; }
.grid-rows-2 { grid-template-rows: repeat(2, minmax(0, 1fr)) !important; }
.grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)) !important; }
.grid-rows-4 { grid-template-rows: repeat(4, minmax(0, 1fr)) !important; }
.grid-rows-6 { grid-template-rows: repeat(6, minmax(0, 1fr)) !important; }
.grid-rows-none { grid-template-rows: none !important; }

/// Grid gap
.gap-0 { gap: 0 !important; }
@each $size, $length in $spacers {
  .gap-#{$size} { gap: $length !important; }
  .gap-x-#{$size} { column-gap: $length !important; }
  .gap-y-#{$size} { row-gap: $length !important; }
}

/// Grid auto flow
.grid-flow-row { grid-auto-flow: row !important; }
.grid-flow-col { grid-auto-flow: column !important; }
.grid-flow-row-dense { grid-auto-flow: row dense !important; }
.grid-flow-col-dense { grid-auto-flow: column dense !important; }

/// Grid auto columns/rows
.auto-cols-auto { grid-auto-columns: auto !important; }
.auto-cols-min { grid-auto-columns: min-content !important; }
.auto-cols-max { grid-auto-columns: max-content !important; }
.auto-cols-fr { grid-auto-columns: minmax(0, 1fr) !important; }

.auto-rows-auto { grid-auto-rows: auto !important; }
.auto-rows-min { grid-auto-rows: min-content !important; }
.auto-rows-max { grid-auto-rows: max-content !important; }
.auto-rows-fr { grid-auto-rows: minmax(0, 1fr) !important; }

// ============================================================================
// 5. POSITIONING UTILITIES
// ============================================================================

/// Position
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

/// Top, right, bottom, left
$position-values: (
  0: 0,
  50: 50%,
  100: 100%
);

@each $prop in (top, right, bottom, left) {
  @each $size, $length in $position-values {
    .#{$prop}-#{$size} { #{$prop}: $length !important; }
  }
}

/// Translate utilities
.translate-middle {
  transform: translate(-50%, -50%) !important;
}

.translate-middle-x {
  transform: translateX(-50%) !important;
}

.translate-middle-y {
  transform: translateY(-50%) !important;
}

// ============================================================================
// 6. SIZING UTILITIES
// ============================================================================

/// Width utilities
$sizes: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
  auto: auto
);

@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $sizes {
    .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
  }
}

/// Min/Max width and height
.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }
.min-vw-100 { min-width: 100vw !important; }
.min-vh-100 { min-height: 100vh !important; }
.vw-100 { width: 100vw !important; }
.vh-100 { height: 100vh !important; }

/// Sizing específico para dashboard
.w-sidebar { width: $sidebar-width !important; }
.w-sidebar-collapsed { width: $sidebar-width-collapsed !important; }
.h-header { height: $header-height !important; }

/// Responsive sizing
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-to($breakpoint) {
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');
    
    @each $prop, $abbrev in (width: w, height: h) {
      @each $size, $length in $sizes {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
      }
    }
  }
}

// ============================================================================
// 7. BACKGROUND UTILITIES
// ============================================================================

/// Background colors
.bg-primary { background-color: $primary !important; }
.bg-secondary { background-color: $secondary !important; }
.bg-success { background-color: $success !important; }
.bg-info { background-color: $info !important; }
.bg-warning { background-color: $warning !important; }
.bg-danger { background-color: $danger !important; }
.bg-light { background-color: $light !important; }
.bg-dark { background-color: $dark !important; }
.bg-body { background-color: $body-bg !important; }
.bg-white { background-color: $white !important; }
.bg-transparent { background-color: transparent !important; }

/// Background with opacity
@each $color, $value in (
  'primary': $primary,
  'secondary': $secondary,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger
) {
  @each $opacity in (10, 25, 50, 75) {
    .bg-#{$color}-#{$opacity} {
      background-color: rgba($value, $opacity / 100) !important;
    }
  }
}

/// Gray backgrounds
.bg-gray-50 { background-color: $gray-50 !important; }
.bg-gray-100 { background-color: $gray-100 !important; }
.bg-gray-200 { background-color: $gray-200 !important; }
.bg-gray-300 { background-color: $gray-300 !important; }
.bg-gray-400 { background-color: $gray-400 !important; }
.bg-gray-500 { background-color: $gray-500 !important; }
.bg-gray-600 { background-color: $gray-600 !important; }
.bg-gray-700 { background-color: $gray-700 !important; }
.bg-gray-800 { background-color: $gray-800 !important; }
.bg-gray-900 { background-color: $gray-900 !important; }

/// Gradient backgrounds
.bg-gradient-primary {
  background: linear-gradient(180deg, $primary 0%, darken($primary, 15%) 100%) !important;
}

.bg-gradient-secondary {
  background: linear-gradient(180deg, $secondary 0%, darken($secondary, 15%) 100%) !important;
}

.bg-gradient-success {
  background: linear-gradient(180deg, $success 0%, darken($success, 15%) 100%) !important;
}

.bg-gradient-info {
  background: linear-gradient(180deg, $info 0%, darken($info, 15%) 100%) !important;
}

.bg-gradient-warning {
  background: linear-gradient(180deg, $warning 0%, darken($warning, 15%) 100%) !important;
}

.bg-gradient-danger {
  background: linear-gradient(180deg, $danger 0%, darken($danger, 15%) 100%) !important;
}

// ============================================================================
// 8. BORDER UTILITIES
// ============================================================================

/// Border
.border { border: $border-width solid $border-color !important; }
.border-0 { border: 0 !important; }
.border-top { border-top: $border-width solid $border-color !important; }
.border-top-0 { border-top: 0 !important; }
.border-end { border-right: $border-width solid $border-color !important; }
.border-end-0 { border-right: 0 !important; }
.border-bottom { border-bottom: $border-width solid $border-color !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-start { border-left: $border-width solid $border-color !important; }
.border-start-0 { border-left: 0 !important; }

/// Border widths
@each $width, $value in $border-widths {
  .border-#{$width} { border-width: $value !important; }
}

/// Border colors
.border-primary { border-color: $primary !important; }
.border-secondary { border-color: $secondary !important; }
.border-success { border-color: $success !important; }
.border-info { border-color: $info !important; }
.border-warning { border-color: $warning !important; }
.border-danger { border-color: $danger !important; }
.border-light { border-color: $light !important; }
.border-dark { border-color: $dark !important; }
.border-white { border-color: $white !important; }

/// Border radius
.rounded { border-radius: $border-radius !important; }
.rounded-0 { border-radius: 0 !important; }
.rounded-1 { border-radius: $border-radius-sm !important; }
.rounded-2 { border-radius: $border-radius !important; }
.rounded-3 { border-radius: $border-radius-lg !important; }
.rounded-4 { border-radius: $border-radius-xl !important; }
.rounded-5 { border-radius: $border-radius-2xl !important; }
.rounded-circle { border-radius: 50% !important; }
.rounded-pill { border-radius: $border-radius-pill !important; }

/// Border radius by corner
.rounded-top { 
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}
.rounded-end {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}
.rounded-bottom {
  border-bottom-left-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}
.rounded-start {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

// ============================================================================
// 9. SHADOW UTILITIES
// ============================================================================

/// Box shadows
.shadow-none { box-shadow: none !important; }
.shadow-xs { box-shadow: $shadow-xs !important; }
.shadow-sm { box-shadow: $shadow-sm !important; }
.shadow { box-shadow: $shadow-md !important; }
.shadow-md { box-shadow: $shadow-md !important; }
.shadow-lg { box-shadow: $shadow-lg !important; }
.shadow-xl { box-shadow: $shadow-xl !important; }
.shadow-2xl { box-shadow: $shadow-2xl !important; }
.shadow-inner { box-shadow: $shadow-inner !important; }

/// Colored shadows
@each $color, $value in (
  'primary': $primary,
  'secondary': $secondary,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger
) {
  .shadow-#{$color} {
    box-shadow: 0 4px 6px -1px rgba($value, 0.3), 0 2px 4px -1px rgba($value, 0.06) !important;
  }
}

// ============================================================================
// 10. OPACITY UTILITIES
// ============================================================================

/// Opacity
@each $opacity-value in $opacities {
  $opacity-name: nth($opacity-value, 1);
  $opacity-val: nth($opacity-value, 2);
  .opacity-#{$opacity-name} { opacity: $opacity-val !important; }
}

// ============================================================================
// 11. OVERFLOW UTILITIES
// ============================================================================

/// Overflow
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }
.overflow-x-auto { overflow-x: auto !important; }
.overflow-x-hidden { overflow-x: hidden !important; }
.overflow-x-visible { overflow-x: visible !important; }
.overflow-x-scroll { overflow-x: scroll !important; }
.overflow-y-auto { overflow-y: auto !important; }
.overflow-y-hidden { overflow-y: hidden !important; }
.overflow-y-visible { overflow-y: visible !important; }
.overflow-y-scroll { overflow-y: scroll !important; }

// ============================================================================
// 12. Z-INDEX UTILITIES
// ============================================================================

/// Z-index
.z-n1 { z-index: -1 !important; }
.z-0 { z-index: 0 !important; }
.z-1 { z-index: 1 !important; }
.z-2 { z-index: 2 !important; }
.z-3 { z-index: 3 !important; }
.z-auto { z-index: auto !important; }

/// Z-index específico para dashboard
.z-dropdown { z-index: $zindex-dropdown !important; }
.z-sticky { z-index: $zindex-sticky !important; }
.z-fixed { z-index: $zindex-fixed !important; }
.z-modal-backdrop { z-index: $zindex-modal-backdrop !important; }
.z-modal { z-index: $zindex-modal !important; }
.z-popover { z-index: $zindex-popover !important; }
.z-tooltip { z-index: $zindex-tooltip !important; }

// ============================================================================
// 13. CURSOR UTILITIES
// ============================================================================

/// Cursor
.cursor-auto { cursor: auto !important; }
.cursor-default { cursor: default !important; }
.cursor-pointer { cursor: pointer !important; }
.cursor-wait { cursor: wait !important; }
.cursor-text { cursor: text !important; }
.cursor-move { cursor: move !important; }
.cursor-help { cursor: help !important; }
.cursor-not-allowed { cursor: not-allowed !important; }
.cursor-none { cursor: none !important; }
.cursor-context-menu { cursor: context-menu !important; }
.cursor-progress { cursor: progress !important; }
.cursor-cell { cursor: cell !important; }
.cursor-crosshair { cursor: crosshair !important; }
.cursor-vertical-text { cursor: vertical-text !important; }
.cursor-alias { cursor: alias !important; }
.cursor-copy { cursor: copy !important; }
.cursor-no-drop { cursor: no-drop !important; }
.cursor-grab { cursor: grab !important; }
.cursor-grabbing { cursor: grabbing !important; }

// ============================================================================
// 14. INTERACTION UTILITIES
// ============================================================================

/// User select
.user-select-all { user-select: all !important; }
.user-select-auto { user-select: auto !important; }
.user-select-none { user-select: none !important; }

/// Pointer events
.pe-none { pointer-events: none !important; }
.pe-auto { pointer-events: auto !important; }

/// Touch action
.touch-auto { touch-action: auto !important; }
.touch-none { touch-action: none !important; }
.touch-pan-x { touch-action: pan-x !important; }
.touch-pan-left { touch-action: pan-left !important; }
.touch-pan-right { touch-action: pan-right !important; }
.touch-pan-y { touch-action: pan-y !important; }
.touch-pan-up { touch-action: pan-up !important; }
.touch-pan-down { touch-action: pan-down !important; }
.touch-pinch-zoom { touch-action: pinch-zoom !important; }
.touch-manipulation { touch-action: manipulation !important; }

// ============================================================================
// 15. TRANSFORM UTILITIES
// ============================================================================

/// Transform
.transform { transform: translatevar(--tw-translate-x, 0) translateY(var(--tw-translate-y, 0)) rotate(var(--tw-rotate, 0)) skewX(var(--tw-skew-x, 0)) skewY(var(--tw-skew-y, 0)) scaleX(var(--tw-scale-x, 1)) scaleY(var(--tw-scale-y, 1)) !important; }
.transform-none { transform: none !important; }

/// Rotate
.rotate-0 { transform: rotate(0deg) !important; }
.rotate-1 { transform: rotate(1deg) !important; }
.rotate-2 { transform: rotate(2deg) !important; }
.rotate-3 { transform: rotate(3deg) !important; }
.rotate-6 { transform: rotate(6deg) !important; }
.rotate-12 { transform: rotate(12deg) !important; }
.rotate-45 { transform: rotate(45deg) !important; }
.rotate-90 { transform: rotate(90deg) !important; }
.rotate-180 { transform: rotate(180deg) !important; }

/// Scale
.scale-0 { transform: scale(0) !important; }
.scale-50 { transform: scale(0.5) !important; }
.scale-75 { transform: scale(0.75) !important; }
.scale-90 { transform: scale(0.9) !important; }
.scale-95 { transform: scale(0.95) !important; }
.scale-100 { transform: scale(1) !important; }
.scale-105 { transform: scale(1.05) !important; }
.scale-110 { transform: scale(1.1) !important; }
.scale-125 { transform: scale(1.25) !important; }
.scale-150 { transform: scale(1.5) !important; }

// ============================================================================
// 16. VISIBILITY UTILITIES
// ============================================================================

/// Visibility
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// ============================================================================
// 17. SCREEN READER UTILITIES
// ============================================================================

/// Screen reader only
.sr-only,
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.sr-only-focusable,
.visually-hidden-focusable {
  &:not(:focus):not(:focus-within) {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
  }
}

// ============================================================================
// 18. PRINT UTILITIES
// ============================================================================

@if $enable-print-styles {
  @media print {
    .d-print-none { display: none !important; }
    .d-print-inline { display: inline !important; }
    .d-print-inline-block { display: inline-block !important; }
    .d-print-block { display: block !important; }
    .d-print-grid { display: grid !important; }
    .d-print-table { display: table !important; }
    .d-print-table-row { display: table-row !important; }
    .d-print-table-cell { display: table-cell !important; }
    .d-print-flex { display: flex !important; }
    .d-print-inline-flex { display: inline-flex !important; }
  }
}

// ============================================================================
// 19. FLOATING UTILITIES
// ============================================================================

/// Float
.float-start { float: left !important; }
.float-end { float: right !important; }
.float-none { float: none !important; }

/// Responsive float
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-to($breakpoint) {
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');
    
    .float#{$infix}-start { float: left !important; }
    .float#{$infix}-end { float: right !important; }
    .float#{$infix}-none { float: none !important; }
  }
}

// ============================================================================
// 20. OBJECT FIT UTILITIES
// ============================================================================

/// Object fit
.object-contain { object-fit: contain !important; }
.object-cover { object-fit: cover !important; }
.object-fill { object-fit: fill !important; }
.object-none { object-fit: none !important; }
.object-scale-down { object-fit: scale-down !important; }

/// Object position
.object-bottom { object-position: bottom !important; }
.object-center { object-position: center !important; }
.object-left { object-position: left !important; }
.object-left-bottom { object-position: left bottom !important; }
.object-left-top { object-position: left top !important; }
.object-right { object-position: right !important; }
.object-right-bottom { object-position: right bottom !important; }
.object-right-top { object-position: right top !important; }
.object-top { object-position: top !important; }

// ============================================================================
// 21. DASHBOARD SPECIFIC UTILITIES
// ============================================================================

/// Dashboard layout utilities
.sidebar-width { width: $sidebar-width !important; }
.sidebar-collapsed-width { width: $sidebar-width-collapsed !important; }
.header-height { height: $header-height !important; }
.content-height { height: calc(100vh - #{$header-height}) !important; }

/// Card utilities
.card-hover {
  transition: all $transition-duration-200 $transition-ease-out !important;
  
  &:hover {
    transform: translateY(-2px) !important;
    box-shadow: $shadow-lg !important;
  }
}

.card-active {
  border-color: $primary !important;
  box-shadow: 0 0 0 2px rgba($primary, 0.25) !important;
}

/// Status indicators
.status-online {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 12px;
    height: 12px;
    background-color: $success;
    border: 2px solid $white;
    border-radius: 50%;
  }
}

.status-offline {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 12px;
    height: 12px;
    background-color: $gray-400;
    border: 2px solid $white;
    border-radius: 50%;
  }
}

.status-busy {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 12px;
    height: 12px;
    background-color: $danger;
    border: 2px solid $white;
    border-radius: 50%;
  }
}

/// Loading states
.loading {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba($primary, 0.2),
      transparent
    );
    animation: loading 1.5s infinite;
  }
}

@keyframes loading {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/// Skeleton loading
.skeleton {
  background: linear-gradient(110deg, $gray-200 8%, $gray-100 18%, $gray-200 33%);
  background-size: 200% 100%;
  animation: skeleton 1.5s ease-in-out infinite;
}

@keyframes skeleton {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/// Pulse animation
.pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: .5;
  }
}

/// Bounce animation
.bounce {
  animation: bounce 1s infinite;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

/// Fade animations
.fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-out {
  animation: fadeOut 0.5s ease-in-out;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/// Slide animations
.slide-in-right {
  animation: slideInRight 0.5s ease-out;
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

.slide-in-left {
  animation: slideInLeft 0.5s ease-out;
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

/// Text utilities específicas
.text-truncate-1 {
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.text-balance {
  text-wrap: balance;
}

.text-pretty {
  text-wrap: pretty;
}

// ============================================================================
// 22. RESPONSIVE UTILITIES GENERATION
// ============================================================================

/// Genera utilidades responsive para spacing, display, etc.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-to($breakpoint) {
    $infix: if($breakpoint == xs, '', '-#{$breakpoint}');
    
    // Spacing responsive
    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
          #{$prop}-right: $length !important;
        }
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
          #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}t#{$infix}-#{$size} { #{$prop}-top: $length !important; }
        .#{$abbrev}e#{$infix}-#{$size} { #{$prop}-right: $length !important; }
        .#{$abbrev}b#{$infix}-#{$size} { #{$prop}-bottom: $length !important; }
        .#{$abbrev}s#{$infix}-#{$size} { #{$prop}-left: $length !important; }
      }
    }
  }
}

// ============================================================================
// 23. REDUCED MOTION UTILITIES
// ============================================================================

@media (prefers-reduced-motion: reduce) {
  .motion-reduce {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .motion-safe {
    animation-play-state: paused !important;
  }
}

// ============================================================================
// 24. DARK MODE UTILITIES
// ============================================================================

@if $enable-dark-mode {
  @media (prefers-color-scheme: dark) {
    .dark\:bg-gray-900 { background-color: $gray-900 !important; }
    .dark\:bg-gray-800 { background-color: $gray-800 !important; }
    .dark\:bg-gray-700 { background-color: $gray-700 !important; }
    .dark\:text-white { color: $white !important; }
    .dark\:text-gray-100 { color: $gray-100 !important; }
    .dark\:text-gray-200 { color: $gray-200 !important; }
    .dark\:text-gray-300 { color: $gray-300 !important; }
    .dark\:border-gray-700 { border-color: $gray-700 !important; }
    .dark\:border-gray-600 { border-color: $gray-600 !important; }
  }
}

// ============================================================================
// FIN DEL ARCHIVO _UTILITIES.SCSS
// ============================================================================