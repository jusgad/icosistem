# Alembic Configuration File for Ecosistema Emprendimiento
# =========================================================
# Este archivo configura Alembic para el manejo de migraciones de base de datos
# del ecosistema de emprendimiento con soporte multi-ambiente y multi-esquema

[alembic]
# Path to migration scripts
script_location = migrations

# Template used to generate migration files
# %(rev)s - revision id
# %(slug)s - the filename slug
# %(year)d, %(month).2d, %(day).2d, %(hour).2d, %(minute).2d - date and time
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
timezone = America/Bogota

# max length of characters to apply to the
# "slug" field
truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
sourceless = false

# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses
# os.pathsep. If this key is omitted entirely, it falls back to the legacy
# behavior of splitting on spaces and/or commas.
version_path_separator = os

# the output encoding used when revision files
# are written from script.py.mako
output_encoding = utf-8

# Database URL para diferentes entornos
# Se sobrescribe desde las variables de entorno o config de Flask
sqlalchemy.url = postgresql://localhost/ecosistema_emprendimiento_dev


# =============================================================================
# CONFIGURACIONES POR AMBIENTE
# =============================================================================

[development]
# Configuración para desarrollo local
sqlalchemy.url = postgresql://ecosistema_user:ecosistema_pass@localhost:5432/ecosistema_emprendimiento_dev
echo = true
sqlalchemy.echo = true
compare_type = true
compare_server_default = true
include_schemas = true

[testing]
# Configuración para testing
sqlalchemy.url = postgresql://test_user:test_pass@localhost:5432/ecosistema_emprendimiento_test
echo = false
sqlalchemy.echo = false
compare_type = true
compare_server_default = true
include_schemas = true

[staging]
# Configuración para staging
sqlalchemy.url = postgresql://staging_user:staging_pass@staging-db:5432/ecosistema_emprendimiento_staging
echo = false
sqlalchemy.echo = false
compare_type = true
compare_server_default = true
include_schemas = true

[production]
# Configuración para producción
sqlalchemy.url = postgresql://prod_user:prod_pass@prod-db:5432/ecosistema_emprendimiento_prod
echo = false
sqlalchemy.echo = false
compare_type = true
compare_server_default = false
include_schemas = true

[docker]
# Configuración para Docker
sqlalchemy.url = postgresql://ecosistema_user:ecosistema_pass@db:5432/ecosistema_emprendimiento
echo = false
sqlalchemy.echo = false
compare_type = true
compare_server_default = true
include_schemas = true


# =============================================================================
# CONFIGURACIONES AVANZADAS DE SQLALCHEMY
# =============================================================================

# Pool settings for SQLAlchemy
[sqlalchemy]
# Pool configuration
pool_pre_ping = true
pool_recycle = 3600
pool_timeout = 30
max_overflow = 20
pool_size = 10

# Connection options
connect_args = {
    "options": "-c timezone=America/Bogota",
    "application_name": "ecosistema_emprendimiento_alembic",
    "connect_timeout": 30,
    "sslmode": "prefer"
}

# Encoding
encoding = utf-8

# Echo SQL statements
echo = false
echo_pool = false


# =============================================================================
# CONFIGURACIONES DE LOGGING
# =============================================================================

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console,file

[formatters]
keys = generic,detailed

[logger_root]
level = WARN
handlers = console,file
qualname =

[logger_sqlalchemy]
level = WARN
handlers = file
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.

[logger_alembic]
level = INFO
handlers = console,file
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = handlers.RotatingFileHandler
args = ('logs/alembic.log', 'a', 10485760, 5, 'utf-8')
level = NOTSET
formatter = detailed

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[formatter_detailed]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)d] %(funcName)s(): %(message)s
datefmt = %Y-%m-%d %H:%M:%S


# =============================================================================
# CONFIGURACIONES ESPECÍFICAS DEL ECOSISTEMA
# =============================================================================

[ecosistema_config]
# Esquemas específicos del proyecto
include_schemas = public,analytics,audit,reporting

# Tablas a excluir de las migraciones automáticas
exclude_tables = 
    alembic_version,
    temp_imports,
    cache_data,
    session_data,
    django_migrations,
    flask_migrate

# Tipos de datos personalizados a incluir
include_types = 
    user_role_enum,
    project_status_enum,
    meeting_status_enum,
    notification_type_enum,
    document_type_enum,
    activity_type_enum

# Configuración para índices
render_as_batch = false
batch_schema_grants = true

# Configuración para secuencias
include_sequences = true

# Configuración para comentarios
include_table_comments = true
include_column_comments = true

# Configuración para constraints
render_item = true
include_constraints = true
include_foreign_keys = true

# Configuración para datos semilla
seed_data_enabled = true
seed_data_path = scripts/seed_data

# Configuración para backups automáticos
backup_before_migration = true
backup_retention_days = 30
backup_path = backups/db

# Configuración para validaciones
validate_migration_before_apply = true
dry_run_enabled = true

# Configuración para rollbacks
max_rollback_steps = 10
rollback_confirmation_required = true

# Configuración de seguridad
encrypt_sensitive_data = true
mask_sensitive_columns = email,phone,document_number,tax_id

# Configuración para auditoría
audit_migrations = true
audit_schema = audit
audit_table = migration_history

# Configuración para notificaciones
notify_on_migration = true
notification_channels = slack,email
slack_webhook_url = ${SLACK_WEBHOOK_URL}
notification_emails = admin@ecosistema.com,devops@ecosistema.com

# Configuración para métricas
collect_migration_metrics = true
metrics_endpoint = ${METRICS_ENDPOINT}

# Configuración para multi-tenant (si aplica)
multi_tenant_enabled = false
tenant_schema_prefix = tenant_
default_tenant = default


# =============================================================================
# CONFIGURACIONES DE PERFORMANCE
# =============================================================================

[performance]
# Configuración para migraciones grandes
batch_size = 1000
chunk_size = 10000
parallel_execution = false
max_workers = 4

# Configuración de timeouts
statement_timeout = 300
lock_timeout = 30
idle_in_transaction_session_timeout = 300

# Configuración de memoria
work_mem = 256MB
maintenance_work_mem = 1GB
shared_buffers = 256MB

# Configuración de índices
create_indexes_concurrently = true
drop_indexes_concurrently = true
maintenance_work_mem_indexes = 2GB


# =============================================================================
# CONFIGURACIONES DE DESARROLLO
# =============================================================================

[development_tools]
# Herramientas de desarrollo
auto_generate_docstrings = true
generate_er_diagram = true
validate_model_relationships = true
check_naming_conventions = true

# Configuración de linting
run_sqlfluff = true
sqlfluff_config = .sqlfluff

# Configuración de testing
run_migration_tests = true
test_rollback = true
test_data_integrity = true

# Configuración de documentación
generate_migration_docs = true
docs_format = markdown
docs_output_path = docs/migrations


# =============================================================================
# HOOKS Y EXTENSIONES
# =============================================================================

[hooks]
# Pre-migration hooks
pre_migration_script = scripts/pre_migration.py
pre_migration_validations = true

# Post-migration hooks
post_migration_script = scripts/post_migration.py
post_migration_cleanup = true
post_migration_notifications = true

# Custom hooks para el ecosistema
update_analytics_views = true
refresh_materialized_views = true
update_search_indexes = true
clear_application_cache = true
restart_celery_workers = false

[extensions]
# Extensiones habilitadas
postgis = false
uuid_ossp = true
pgcrypto = true
hstore = false
ltree = false

# Extensiones personalizadas
custom_functions = true
custom_aggregates = false
custom_operators = false


# =============================================================================
# CONFIGURACIONES DE MONITOREO
# =============================================================================

[monitoring]
# Métricas de migración
track_migration_time = true
track_table_sizes = true
track_index_usage = true

# Alertas
alert_on_long_migrations = true
long_migration_threshold = 300

# Logging avanzado
log_sql_statements = false
log_execution_plan = false
log_lock_waits = true

# Health checks
post_migration_health_check = true
health_check_timeout = 60