version: '3.8'

services:
  web:
    build: .
    container_name: postpenados-app
    restart: always
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY:-clave_super_secreta_para_desarrollo}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt_clave_secreta_para_desarrollo}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postpenados_user}:${POSTGRES_PASSWORD:-secure_password}@db:5432/${POSTGRES_DB:-postpenados_db}
      - REDIS_URL=redis://redis:6379/0
      - MAIL_SERVER=${MAIL_SERVER:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER:-noreply@postpenados.org}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@postpenados.org}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${WEB_PORT:-8000}:5000"
    volumes:
      - ./app/static/uploads:/app/app/static/uploads
      - ./logs:/app/logs
      - ./instance:/app/instance
    networks:
      - postpenados-network
    command: gunicorn --bind 0.0.0.0:5000 --worker-class eventlet --workers 4 run:app

  db:
    image: postgres:15-alpine
    container_name: postpenados-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postpenados_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postpenados_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postpenados-network

  redis:
    image: redis:7-alpine
    container_name: postpenados-redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postpenados-network

  nginx:
    image: nginx:1.25-alpine
    container_name: postpenados-nginx
    restart: always
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/usr/share/nginx/html/static
    depends_on:
      - web
    networks:
      - postpenados-network

  celery-worker:
    build: .
    container_name: postpenados-celery
    restart: always
    command: celery -A app.celery worker --loglevel=info
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postpenados_user}:${POSTGRES_PASSWORD:-secure_password}@db:5432/${POSTGRES_DB:-postpenados_db}
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    volumes:
      - ./logs:/app/logs
      - ./instance:/app/instance
    networks:
      - postpenados-network

  celery-beat:
    build: .
    container_name: postpenados-celery-beat
    restart: always
    command: celery -A app.celery beat --loglevel=info
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postpenados_user}:${POSTGRES_PASSWORD:-secure_password}@db:5432/${POSTGRES_DB:-postpenados_db}
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
      - web
      - celery-worker
    volumes:
      - ./logs:/app/logs
      - ./instance:/app/instance
    networks:
      - postpenados-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: postpenados-pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@postpenados.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - postpenados-network
    profiles:
      - dev

  # Opcional: Servidor SMTP para desarrollo
  mailhog:
    image: mailhog/mailhog
    container_name: postpenados-mailhog
    ports:
      - "${MAILHOG_UI_PORT:-8025}:8025"  # Interfaz web
      - "${MAILHOG_SMTP_PORT:-1025}:1025"  # SMTP server
    networks:
      - postpenados-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  postpenados-network:
    driver: bridge