version: '3.8'

services:
  web:
    build: .
    container_name: emprendimiento-app
    restart: always
    environment:
      - FLASK_ENV=docker
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      - db
      - redis
    ports:
      - "8000:5000"
    volumes:
      - ./app/static/uploads:/app/app/static/uploads
      - ./logs:/app/logs
      - ./instance:/app/instance
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    container_name: emprendimiento-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: emprendimiento-redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx:
    image: nginx:1.21-alpine
    container_name: emprendimiento-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/static:/usr/share/nginx/html/static
    depends_on:
      - web
    networks:
      - app-network

  celery-worker:
    build: .
    container_name: emprendimiento-celery
    restart: always
    command: celery -A app.celery worker --loglevel=info
    environment:
      - FLASK_ENV=docker
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  celery-beat:
    build: .
    container_name: emprendimiento-celery-beat
    restart: always
    command: celery -A app.celery beat --loglevel=info
    environment:
      - FLASK_ENV=docker
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web
      - celery-worker
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: emprendimiento-pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge