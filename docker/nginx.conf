# =============================================================================
# Nginx Configuration - Ecosistema de Emprendimiento
# =============================================================================
# 
# Configuración completa de Nginx para producción que incluye:
# - Load balancing y alta disponibilidad
# - SSL/TLS con configuración segura
# - Rate limiting y protección DDoS
# - Compresión y optimización de assets
# - Caching inteligente
# - Security headers completos
# - WebSocket support para Socket.IO
# - API rate limiting diferenciado
# - Logging detallado para monitoring
# - Health checks y status pages
# - Manejo de errores personalizado
#
# Autor: Sistema de Emprendimiento
# Version: 1.0.0
# =============================================================================

# -----------------------------------------------------------------------------
# Global Configuration
# -----------------------------------------------------------------------------
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_stream_module.so;

events {
    # Performance tuning
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
    
    # Connection processing
    worker_aio_requests 32;
}

http {
    # -----------------------------------------------------------------------------
    # Basic Settings
    # -----------------------------------------------------------------------------
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Character set
    charset utf-8;
    
    # Server tokens (security)
    server_tokens off;
    
    # File I/O optimization
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Connection timeouts
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;
    
    # Buffer sizes
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    client_max_body_size 50m;
    large_client_header_buffers 4 16k;
    
    # Hash tables
    types_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 1024;
    variables_hash_max_size 1024;
    
    # -----------------------------------------------------------------------------
    # Security Headers
    # -----------------------------------------------------------------------------
    # OWASP Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss:; frame-ancestors 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Additional security headers
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    
    # -----------------------------------------------------------------------------
    # SSL/TLS Configuration
    # -----------------------------------------------------------------------------
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    
    # SSL session optimization
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # SSL stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
    
    # DH parameters
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # -----------------------------------------------------------------------------
    # Compression
    # -----------------------------------------------------------------------------
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # -----------------------------------------------------------------------------
    # Rate Limiting Zones
    # -----------------------------------------------------------------------------
    # General rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    
    # API rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    
    # Authentication rate limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    
    # Upload rate limiting
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Admin area rate limiting
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # -----------------------------------------------------------------------------
    # Caching
    # -----------------------------------------------------------------------------
    # Proxy cache path
    proxy_cache_path /var/cache/nginx/app levels=1:2 keys_zone=app_cache:100m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=2g inactive=1d use_temp_path=off;
    
    # Cache settings
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 301 1h;
    proxy_cache_valid any 1m;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    proxy_cache_lock on;
    
    # -----------------------------------------------------------------------------
    # Logging Configuration
    # -----------------------------------------------------------------------------
    # Custom log formats
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json '{'
                               '"timestamp":"$time_iso8601",'
                               '"remote_addr":"$remote_addr",'
                               '"remote_user":"$remote_user",'
                               '"request":"$request",'
                               '"status":$status,'
                               '"body_bytes_sent":$body_bytes_sent,'
                               '"http_referer":"$http_referer",'
                               '"http_user_agent":"$http_user_agent",'
                               '"http_x_forwarded_for":"$http_x_forwarded_for",'
                               '"request_time":$request_time,'
                               '"upstream_response_time":"$upstream_response_time",'
                               '"upstream_connect_time":"$upstream_connect_time",'
                               '"upstream_header_time":"$upstream_header_time"'
                               '}';
    
    # Access logs
    access_log /var/log/nginx/access.log detailed;
    
    # -----------------------------------------------------------------------------
    # Upstream Definitions
    # -----------------------------------------------------------------------------
    # Main application backend
    upstream app_backend {
        least_conn;
        
        # Application servers
        server app:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more servers for scaling:
        # server app2:8000 max_fails=3 fail_timeout=30s weight=1;
        # server app3:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Flower monitoring backend
    upstream flower_backend {
        server flower:5555 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }
    
    # MailHog backend (development)
    upstream mailhog_backend {
        server mailhog:8025 max_fails=2 fail_timeout=30s;
        keepalive 4;
    }
    
    # -----------------------------------------------------------------------------
    # Maps for Dynamic Configuration
    # -----------------------------------------------------------------------------
    # Map for API rate limiting
    map $uri $api_rate_limit {
        default "general";
        ~^/api/ "api";
        ~^/auth/ "auth";
        ~^/admin/ "admin";
        ~^/upload/ "upload";
    }
    
    # Map for caching
    map $uri $no_cache {
        default 0;
        ~^/admin/ 1;
        ~^/api/auth/ 1;
        ~^/auth/ 1;
        ~*/upload 1;
    }
    
    # Map for CORS
    map $http_origin $cors_origin {
        default "";
        "~^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$" "$http_origin";
        "~^https://([^.]+\.)?ecosistema\.com$" "$http_origin";
        "~^https://([^.]+\.)?yourdomain\.com$" "$http_origin";
    }
    
    # -----------------------------------------------------------------------------
    # GeoIP Configuration (if available)
    # -----------------------------------------------------------------------------
    # geoip_country /usr/share/GeoIP/GeoIP.dat;
    # geoip_city /usr/share/GeoIP/GeoLiteCity.dat;
    
    # -----------------------------------------------------------------------------
    # Main Server Configuration
    # -----------------------------------------------------------------------------
    server {
        listen 80;
        listen [::]:80;
        server_name ${DOMAIN} www.${DOMAIN};
        
        # Security: Hide server version
        server_tokens off;
        
        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Health check endpoint (accessible via HTTP)
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # -----------------------------------------------------------------------------
    # HTTPS Server Configuration
    # -----------------------------------------------------------------------------
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ${DOMAIN} www.${DOMAIN};
        
        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        
        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Connection and rate limiting
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;
        
        # Root directory for static files
        root /var/www;
        index index.html index.htm;
        
        # Enable access log for main server
        access_log /var/log/nginx/access.log json;
        error_log /var/log/nginx/error.log warn;
        
        # -----------------------------------------------------------------------------
        # Static Files and Assets
        # -----------------------------------------------------------------------------
        # Static files with aggressive caching
        location /static/ {
            alias /var/www/static/;
            
            # Cache control
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Compression
            gzip_static on;
            
            # Security
            location ~* \.(php|py|pl|sh|lua)$ {
                deny all;
            }
            
            # Font files CORS
            location ~* \.(eot|ttf|woff|woff2)$ {
                add_header Access-Control-Allow-Origin *;
            }
            
            # Try files
            try_files $uri $uri/ =404;
        }
        
        # Media/upload files
        location /media/ {
            alias /var/www/media/;
            
            # Cache control for user uploads
            expires 30d;
            add_header Cache-Control "public";
            
            # Security for uploads
            location ~* \.(php|py|pl|sh|lua|exe|bat)$ {
                deny all;
            }
            
            # File size limit
            client_max_body_size 50m;
            
            try_files $uri =404;
        }
        
        # Favicon
        location = /favicon.ico {
            alias /var/www/static/img/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Robots.txt
        location = /robots.txt {
            alias /var/www/static/robots.txt;
            expires 1d;
            access_log off;
        }
        
        # -----------------------------------------------------------------------------
        # API Endpoints
        # -----------------------------------------------------------------------------
        # API routes with specific rate limiting
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=50 nodelay;
            
            # CORS headers for API
            if ($cors_origin != "") {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Access-Control-Max-Age 86400 always;
            }
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # Proxy to application
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Cache bypass for API
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }
        
        # -----------------------------------------------------------------------------
        # Authentication Routes
        # -----------------------------------------------------------------------------
        location /auth/ {
            # Strict rate limiting for auth
            limit_req zone=auth burst=5 nodelay;
            
            # No caching for auth routes
            proxy_cache off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # Additional security headers
            add_header X-Frame-Options "DENY" always;
            
            # Proxy to application
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # -----------------------------------------------------------------------------
        # Admin Routes
        # -----------------------------------------------------------------------------
        location /admin/ {
            # Rate limiting for admin
            limit_req zone=admin burst=10 nodelay;
            
            # IP restriction (uncomment and configure for production)
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
            
            # No caching for admin
            proxy_cache off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # Enhanced security headers
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Proxy to application
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # -----------------------------------------------------------------------------
        # WebSocket Support
        # -----------------------------------------------------------------------------
        location /socket.io/ {
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # No buffering for WebSockets
            proxy_buffering off;
        }
        
        # -----------------------------------------------------------------------------
        # Upload Endpoints
        # -----------------------------------------------------------------------------
        location /upload/ {
            # Rate limiting for uploads
            limit_req zone=upload burst=3 nodelay;
            
            # Large file support
            client_max_body_size 50m;
            client_body_timeout 300s;
            
            # Progress tracking
            track_uploads uploads 30s;
            
            # Proxy to application
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # No buffering for uploads
            proxy_request_buffering off;
        }
        
        # Upload progress endpoint
        location ^~ /progress {
            report_uploads uploads;
        }
        
        # -----------------------------------------------------------------------------
        # Monitoring and Health Checks
        # -----------------------------------------------------------------------------
        # Application health check
        location = /health {
            proxy_pass http://app_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            access_log off;
        }
        
        # Nginx status (for monitoring)
        location = /nginx_status {
            stub_status on;
            access_log off;
            
            # Restrict access
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Flower monitoring (Celery)
        location /flower/ {
            # Basic authentication required
            auth_basic "Flower Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Rate limiting
            limit_req zone=admin burst=5 nodelay;
            
            # Proxy to Flower
            proxy_pass http://flower_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /flower;
            
            # WebSocket support for Flower
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # MailHog (development only)
        location /mailhog/ {
            # Only in development
            if ($env != "development") {
                return 404;
            }
            
            proxy_pass http://mailhog_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # -----------------------------------------------------------------------------
        # Main Application
        # -----------------------------------------------------------------------------
        location / {
            # General rate limiting
            limit_req zone=general burst=20 nodelay;
            
            # Cache configuration
            proxy_cache app_cache;
            proxy_cache_bypass $no_cache;
            proxy_no_cache $no_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            
            # Cache headers
            add_header X-Cache-Status $upstream_cache_status;
            
            # Proxy to application
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Retry logic
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 60s;
        }
        
        # -----------------------------------------------------------------------------
        # Error Pages
        # -----------------------------------------------------------------------------
        error_page 404 /errors/404.html;
        error_page 500 502 503 504 /errors/50x.html;
        
        location ^~ /errors/ {
            internal;
            alias /var/www/errors/;
        }
        
        # -----------------------------------------------------------------------------
        # Security: Block sensitive files
        # -----------------------------------------------------------------------------
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to configuration files
        location ~* \.(ini|conf|config|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to version control
        location ~ /\.(git|svn|hg) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}

# =============================================================================
# Stream Configuration (TCP/UDP Load Balancing)
# =============================================================================
stream {
    # Log format for stream
    log_format stream '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time';
    
    # PostgreSQL proxy (if needed)
    upstream postgres_backend {
        server db:5432 max_fails=3 fail_timeout=30s;
    }
    
    # Redis proxy (if needed)
    upstream redis_backend {
        server redis:6379 max_fails=3 fail_timeout=30s;
    }
    
    # PostgreSQL proxy server (internal network only)
    server {
        listen 5432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/postgres_proxy.log;
        access_log /var/log/nginx/postgres_access.log stream;
        
        # Only allow internal networks
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;
    }
}

# =============================================================================
# Configuration Notes
# =============================================================================
#
# Environment Variables Used:
# - DOMAIN: Your domain name (e.g., ecosistema.com)
# - Environment variable substitution requires nginx-envsubst
#
# Required Directories:
# - /var/www/static/: Static files
# - /var/www/media/: User uploads
# - /var/www/errors/: Custom error pages
# - /var/cache/nginx/: Cache storage
# - /etc/nginx/ssl/: SSL certificates and DH params
# - /etc/letsencrypt/: Let's Encrypt certificates
#
# Required Files:
# - /etc/nginx/.htpasswd: Basic auth for monitoring
# - /etc/nginx/ssl/dhparam.pem: DH parameters
# - /etc/nginx/ssl/chain.pem: Certificate chain
#
# Security Considerations:
# - Update server_name with your actual domain
# - Configure IP restrictions for admin areas
# - Set up proper SSL certificates
# - Configure GeoIP blocking if needed
# - Review and adjust rate limiting values
# - Set up fail2ban for additional protection
#
# Performance Tuning:
# - Adjust worker_processes based on CPU cores
# - Tune buffer sizes based on your traffic
# - Configure cache sizes based on available disk space
# - Monitor and adjust timeout values
#
# Monitoring:
# - Access logs in JSON format for easy parsing
# - Error logs with appropriate levels
# - Nginx status endpoint for monitoring
# - Cache hit ratio monitoring
#
# =============================================================================